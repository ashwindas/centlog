<div class="row show-grid">
	<div class="span6">
		<h1> <%= @group.name %> </h1>
	</div>
	<div class="span10">
		<% if current_user.id == @group.owner_id %>

		<%= link_to 'Edit this group', edit_group_path(@group) %>
		<%= link_to 'Delete this group', @group, :confirm => 'Are you sure? This cannot be undone', :method => :delete %>

		<%else%>

		<% if @group.users.include?(current_user) %>

		<%= form_tag @group, :method => 'post' do %>
		<%= hidden_field_tag(:leave, current_user.id) %>
		<%= submit_tag "Leave this group", :name => nil, :class => "btn primary medium" %>
		<% end %>

		<%else%>

		<%= form_tag @group, :method => 'get' do %>
		<%= hidden_field_tag(:join, current_user.id) %>
		<%= submit_tag "Join this group", :name => nil, :class => "btn primary medium" %>
		<% end %>

		<%end%>

		<% end %>
	</div>
</div>
<div class="row show-grid">
	<div class="span12">
		<p>
			<b>Description:</b>
			<%= @group.description %>
		</p>
		<p>
			<b>Owner:</b>
			<% if current_user.id == @group.owner_id %>
			You are the owner of this group!
			<%else%>
			<%= User.find(@group.owner_id).email %>
			<% end %>
			<br/>
		</p>
	</div>
	<div class="span4">
		<h4> Members: </h4>
		<ol>
			<% @members.each do |member| %>
			<li>
				<%= member.email %>
			</li>
			<% end %>
		</ol>
	</div>
</div>
<% if current_user.id == @group.owner_id %> <h4>Add a member</h4>
<%= form_tag @group, :method => 'get' do %>
<%= email_field_tag :new_user_email, params[:new_user_email] %>
<%= submit_tag "Add", :name => nil, :class => "btn primary small" %>
<% end %>
<% end %>
<hr/>
<h3>This Group's expenses<small> Showing <%= @transactions.size%> expenses from <%= pluralize(@members.size + 1 , 'member') %> <small></h3>
<h4> Total expenditure : <%= number_to_currency(@total, :unit => "$") %></h4>
<br/>
<div class="row show-grid">
	<div class="span16">
		<script >
			$(document).ready(function() {
				$("#expense_table").tablesorter({
					sortList : [[3, 1]]
				});
			});

		</script>
		<table class="zebra-striped" id="expense_table">
			<thead>
				<tr>
					<th>Member</th>
					<th>Description</th>
					<th>Amount</th>
					<th>Date</th>
					<th>Location</th>
					<th>Tag</th>
				</tr>
			</thead>
			<tbody>
				<% @transactions_paginated.each do |transaction| %>
				<tr>
					<td><%= User.find(transaction.user_id).email %></td>
					<td><%= link_to transaction.description, transaction %> </td>
					<td><%= link_to number_to_currency(transaction.amount, :unit => "$"), transaction %></td>
					<td><%= transaction.date %></td>
					<td><%= transaction.location %></td>
					<td><%= transaction.tag %></td>
				</tr>
				<% end %>
			</tbody>
		</table>
		<%= will_paginate @transactions_paginated %>
	</div>
</div>
<script type="text/javascript" charset="utf-8">
		Highcharts.theme = {
	colors: ["#DDDF0D", "#7798BF", "#55BF3B", "#DF5353", "#aaeeee", "#ff0066", "#eeaaee",
	"#55BF3B", "#DF5353", "#7798BF", "#aaeeee"],
	chart: {
	backgroundColor: {
	linearGradient: [0, 0, 0, 400],
	stops: [
	[0, 'rgb(96, 96, 96)'],
	[1, 'rgb(16, 16, 16)']
	]
	},
	borderWidth: 0,
	borderRadius: 15,
	plotBackgroundColor: null,
	plotShadow: false,
	plotBorderWidth: 0
	},
	title: {
	style: {
	color: '#FFF',
	font: '16px Lucida Grande, Lucida Sans Unicode, Verdana, Arial, Helvetica, sans-serif'
	}
	},
	subtitle: {
	style: {
	color: '#DDD',
	font: '12px Lucida Grande, Lucida Sans Unicode, Verdana, Arial, Helvetica, sans-serif'
	}
	},
	xAxis: {
	gridLineWidth: 0,
	lineColor: '#999',
	tickColor: '#999',
	labels: {
	style: {
	color: '#999',
	fontWeight: 'bold'
	}
	},
	title: {
	style: {
	color: '#AAA',
	font: 'bold 12px Lucida Grande, Lucida Sans Unicode, Verdana, Arial, Helvetica, sans-serif'
	}
	}
	},
	yAxis: {
	alternateGridColor: null,
	minorTickInterval: null,
	gridLineColor: 'rgba(255, 255, 255, .1)',
	lineWidth: 0,
	tickWidth: 0,
	labels: {
	style: {
	color: '#999',
	fontWeight: 'bold'
	}
	},
	title: {
	style: {
	color: '#AAA',
	font: 'bold 12px Lucida Grande, Lucida Sans Unicode, Verdana, Arial, Helvetica, sans-serif'
	}
	}
	},
	legend: {
	itemStyle: {
	color: '#CCC'
	},
	itemHoverStyle: {
	color: '#FFF'
	},
	itemHiddenStyle: {
	color: '#333'
	}
	},
	labels: {
	style: {
	color: '#CCC'
	}
	},
	tooltip: {
	backgroundColor: {
	linearGradient: [0, 0, 0, 50],
	stops: [
	[0, 'rgba(96, 96, 96, .8)'],
	[1, 'rgba(16, 16, 16, .8)']
	]
	},
	borderWidth: 0,
	style: {
	color: '#FFF'
	}
	},

	plotOptions: {
	line: {
	dataLabels: {
	color: '#CCC'
	},
	marker: {
	lineColor: '#333'
	}
	},
	spline: {
	marker: {
	lineColor: '#333'
	}
	},
	scatter: {
	marker: {
	lineColor: '#333'
	}
	},
	candlestick: {
	lineColor: 'white'
	}
	},

	toolbar: {
	itemStyle: {
	color: '#CCC'
	}
	},

	navigation: {
	buttonOptions: {
	backgroundColor: {
	linearGradient: [0, 0, 0, 20],
	stops: [
	[0.4, '#606060'],
	[0.6, '#333333']
	]
	},
	borderColor: '#000000',
	symbolStroke: '#C0C0C0',
	hoverSymbolStroke: '#FFFFFF'
	}
	},

	exporting: {
	buttons: {
	exportButton: {
	symbolFill: '#55BE3B'
	},
	printButton: {
	symbolFill: '#7797BE'
	}
	}
	},

	// scroll charts
	rangeSelector: {
	buttonTheme: {
	fill: {
	linearGradient: [0, 0, 0, 20],
	stops: [
	[0.4, '#888'],
	[0.6, '#555']
	]
	},
	stroke: '#000000',
	style: {
	color: '#CCC',
	fontWeight: 'bold'
	},
	states: {
	hover: {
	fill: {
	linearGradient: [0, 0, 0, 20],
	stops: [
	[0.4, '#BBB'],
	[0.6, '#888']
	]
	},
	stroke: '#000000',
	style: {
	color: 'white'
	}
	},
	select: {
	fill: {
	linearGradient: [0, 0, 0, 20],
	stops: [
	[0.1, '#000'],
	[0.3, '#333']
	]
	},
	stroke: '#000000',
	style: {
	color: 'yellow'
	}
	}
	}
	},
	inputStyle: {
	backgroundColor: '#333',
	color: 'silver'
	},
	labelStyle: {
	color: 'silver'
	}
	},

	navigator: {
	handles: {
	backgroundColor: '#666',
	borderColor: '#AAA'
	},
	outlineColor: '#CCC',
	maskFill: 'rgba(16, 16, 16, 0.5)',
	series: {
	color: '#7798BF',
	lineColor: '#A6C7ED'
	}
	},

	scrollbar: {
	barBackgroundColor: {
	linearGradient: [0, 0, 0, 20],
	stops: [
	[0.4, '#888'],
	[0.6, '#555']
	]
	},
	barBorderColor: '#CCC',
	buttonArrowColor: '#CCC',
	buttonBackgroundColor: {
	linearGradient: [0, 0, 0, 20],
	stops: [
	[0.4, '#888'],
	[0.6, '#555']
	]
	},
	buttonBorderColor: '#CCC',
	rifleColor: '#FFF',
	trackBackgroundColor: {
	linearGradient: [0, 0, 0, 10],
	stops: [
	[0, '#000'],
	[1, '#333']
	]
	},
	trackBorderColor: '#666'
	},

	// special colors for some of the demo examples
	legendBackgroundColor: 'rgba(48, 48, 48, 0.8)',
	legendBackgroundColorSolid: 'rgb(70, 70, 70)',
	dataLabelsColor: '#444',
	textColor: '#E0E0E0',
	maskColor: 'rgba(255,255,255,0.3)'
	};

	// Apply the theme
	var highchartsOptions = Highcharts.setOptions(Highcharts.theme);

	var chart;
	$(document).ready(function() {
	chart = new Highcharts.Chart({
	chart: {
	renderTo: 'expense_pie',
	plotBackgroundColor: null,
	plotBorderWidth: null,
	plotShadow: false
	},
	title: {
	text: 'Expense - Total:<%= number_to_currency(@total, :unit => "$") %>'
	},
	tooltip: {
	formatter: function() {
	return '<b>'+ this.point.name +'</b>: '+ Math.round(this.percentage) +' %';
	}
	},
	plotOptions: {
	pie: {
	allowPointSelect: true,
	cursor: 'pointer',
	dataLabels: {
	enabled: true,
	color: Highcharts.theme.textColor || '#000000',
	connectorColor: Highcharts.theme.textColor || '#000000',
	formatter: function() {
	return '<b>'+ this.point.name +'</b>: '+ Math.round(this.percentage) +' %';
	}
	}
	}
	},
	series: [{
	type: 'pie',
	name: 'Expense',
	data:  [
	<% @pie_data.each do |d|%><%= raw d %>,<%end%>
		]
		}]
		});
		});
</script>
<div id="expense_pie" style="width: 800px; height: 600px; padding-top:10px;
padding-bottom:10px;
padding-right:25px;
padding-left:25px;"></div>

<script>
	$(function() {
		var availableTags = [
		<%User.all.each do |u|%>
		"<%=u.email%>",
		<%end%>	
		];
		$( "#new_user_email" ).autocomplete({
			source: availableTags
		});
	});
</script>
